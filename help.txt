This module provides a portable way of using operating system dependent functionality.
If you just want to read or write a file see open(), if you want to manipulate paths,
see the os.path module, and if you want to read all the lines in all the files on the
command line see the fileinput module. For creating temporary files and directories see
the tempfile module, and for high-level file and directory handling see the shutil module.

os.example.1 #TODO add examples
os.example.2 #TODO add examples


This module provides access to some variables used or maintained by the interpreter and to
functions that interact strongly with the interpreter. It is always available.

sys.example.1 #TODO add examples
sys.example.2 #TODO add examples